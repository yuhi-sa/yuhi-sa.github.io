<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MachineLearning on tomato blog</title>
    <link>https://yuhi-sa.github.io/en/tags/machinelearning/</link>
    <description>Recent content in MachineLearning on tomato blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 06 Feb 2022 15:00:23 +0900</lastBuildDate>
    <atom:link href="https://yuhi-sa.github.io/en/tags/machinelearning/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Reparameterization trick</title>
      <link>https://yuhi-sa.github.io/en/posts/20220206_repa/1/</link>
      <pubDate>Sun, 06 Feb 2022 15:00:23 +0900</pubDate>
      <guid>https://yuhi-sa.github.io/en/posts/20220206_repa/1/</guid>
      <description>Reparameterization trick When variables are sampled from a probability distribution, they become random variables, and differentiation cannot be performed, making it impossible to perform calculations using backpropagation. To solve this problem, Kingma et al. introduced the technique called the reparameterization trick.&#xA;The reparameterization trick performs the same sampling by partitioning and combining the random numbers that are independent of the parameters and the parameters of the probability distribution from which they are sampled.</description>
    </item>
    <item>
      <title>[Python]Unscented Transformation</title>
      <link>https://yuhi-sa.github.io/en/posts/20210125_ut/1/</link>
      <pubDate>Mon, 25 Jan 2021 15:17:23 +0900</pubDate>
      <guid>https://yuhi-sa.github.io/en/posts/20210125_ut/1/</guid>
      <description>Unscented Transformation The U-transform is a method for estimating $\bar{y}$ and $P_y$ of a random variable $y$ transformed by a nonlinear transformation $y=f(x)$ of $x$ when the mean $\bar{x}$ and variance-covariance matrix $P_x$ of the random variable $x$ following a standard normal distribution are known.&#xA;First of all, it is possible to compute the following from the Monte Carlo point of view, but this requires a large value of N to achieve good accuracy, which poses a practical problem.</description>
    </item>
  </channel>
</rss>
