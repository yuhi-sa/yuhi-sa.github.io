<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>制御工学 on とまとまとブログ</title>
    <link>https://yuhi-sa.github.io/tags/%E5%88%B6%E5%BE%A1%E5%B7%A5%E5%AD%A6/</link>
    <description>Recent content in 制御工学 on とまとまとブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 01 Sep 2020 15:17:23 +0900</lastBuildDate><atom:link href="https://yuhi-sa.github.io/tags/%E5%88%B6%E5%BE%A1%E5%B7%A5%E5%AD%A6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>フィルタまとめ</title>
      <link>https://yuhi-sa.github.io/posts/20200901/</link>
      <pubDate>Tue, 01 Sep 2020 15:17:23 +0900</pubDate>
      
      <guid>https://yuhi-sa.github.io/posts/20200901/</guid>
      <description>フィルタ(Filter)とは フィルタとは，測定された時系列データから信号成分だけを通し，ノイズ成分を除去する仕組みである．
想定するモデル フィルタリングでは，時間ステップ$t$，初期値$x_0$，観測値$z_t$，制御入力$u_{t-1}$が与えられたときの，潜在状態$x_t$を推定する．推定値$x$はプロセスモデル$f$によって，観測値$z$は観測モデル$h$によって与えられる．
$$ x_t = f(x_{t-1},u_{t-1},q_{t-1}) \tag{1} $$ $$ z_t=h(x_t,r_t) \tag{2} $$ ここで，$q$は，プロセスノイズ，$r$は観測ノイズである．
$$ q\sim N(0,Q) $$ $$ r\sim N(0,R) $$
カルマンフィルタ(Kalman Filter, EKF) 目的 時刻$t$が観測されたとき，その状態を観測データ$z(t)$と時系列の状態空間モデルを用いて推定する．
方法 状態空間モデルの係数は既知であり，時間によらず一定であると仮定する(LTI:Linear Time-Invariant,線形時不変)．Step1において，対象とする時系列をガウスノイズにより駆動された線形システムの出力とみなし，その線形システムの状態空間モデルを構築する．Step2においてStep1で得られた状態空間モデルの状態$x(t)$を時系列データ$y(t)$から推定する． $x$は，xの平均$\mu$と共分散$\Sigma$によって表される．また，プロセスノイズを$Q$，観測ノイズを$R$とする．
$$ x \sim	(\mu,\Sigma) $$
 Step1 予測ステップ
 事前状態推定値
$$ \hat{\mu}=A\mu_{t-1}+B\mu_t \tag{3} $$ 事前誤差共分散行列
$$ \hat{\Sigma}{t}=A\Sigma{t-1}A^T+Q_{t-1} \tag{4} $$
 Step2 状態推定
 カルマンゲイン
$$ K_t=\hat{\Sigma_t}H^T(\hat{\Sigma_tH^T+R_t})^{-1} \tag{5} $$ 状態推定値
$$ \mu_t=\hat{\mu_t}+K_t(z_t-H\hat{\mu_t}) \tag{6} $$ 事後誤差共分散行列
$$ \Sigma_t = (I_n-K_tH)\hat{\Sigma_t} \tag{7} $$</description>
    </item>
    
  </channel>
</rss>
