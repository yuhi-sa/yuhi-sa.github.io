<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>制御 on tomato blog</title>
    <link>https://yuhi-sa.github.io/tags/%E5%88%B6%E5%BE%A1/</link>
    <description>Recent content in 制御 on tomato blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 05 Apr 2021 13:00:23 +0900</lastBuildDate>
    <atom:link href="https://yuhi-sa.github.io/tags/%E5%88%B6%E5%BE%A1/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>H無限大制御</title>
      <link>https://yuhi-sa.github.io/posts/20210405_hinf/1/</link>
      <pubDate>Mon, 05 Apr 2021 13:00:23 +0900</pubDate>
      <guid>https://yuhi-sa.github.io/posts/20210405_hinf/1/</guid>
      <description>$H_\infty$制御問題の目的は，外乱$w$から出力$z$への閉ループ伝達関数$T_{zw}$の$H_\infty$ノルムを最小にしながら，誤差$z$をゼロにする制御器$K$を設計することである．&#xA;$$||T_{zw}||_\infty = \sup_w\frac{||z||_2}{||w||_2}$$&#xA;上式とスモールゲイン定理より，$H_\infty$制御は以下の式を満たす制御器を設計する問題となる．&#xA;$$||T_{zw}||_\infty^2 = \sup_w\frac{{||z||_2}^2}{{||w||_2}^2}$$&#xA;ここで，&#xA;$${||z||_2}^2=\int_0^\infty z^T(t)z(t)dt$$&#xA;$${||w||_2}^2=\int_0^\infty w^T(t)w(t)dt$$&#xA;よって，以下の式で定式化される．&#xA;$$V=\int_0^\infty(z^T(t)z(t)-\gamma^2w^Tw(t))dt \leq 0$$&#xA;$$V^\ast = \min_u\max_w[z^T(t)z(t)-\gamma^2w^T(t)w(t)]$$</description>
    </item>
    <item>
      <title>PID制御</title>
      <link>https://yuhi-sa.github.io/posts/20210318_pid/1/</link>
      <pubDate>Thu, 18 Mar 2021 15:00:23 +0900</pubDate>
      <guid>https://yuhi-sa.github.io/posts/20210318_pid/1/</guid>
      <description>PID制御とは あるシステムを制御の出力値$y(t)$を制御するために，制御対象の出力をコントローラにフィードバックさせて，その情報をもとに制御する手法がある(フィードバック制御)．フィードバック制御では，出力値$y(t)$と目標値$r(t)$との偏差$e(t)$に基づいて操作量の計算を行うことで，制御系の安定化，目標値への追従性の向上，外乱抑制が可能となる．&#xA;P制御 P制御の入力値$u(t)$は以下の式で与えられる．このとき，$e(t)=r(t)-y(t)$とする．&#xA;$$u(t)=K_Pe(t)$$&#xA;$K_p$を大きくすると，偏差は小さくなる．しかし，$K_p$を大きくすると，応答が振動的になり，最終的には制御が不安定となり発散してしまう．また，偏差が小さくなると，入力値が消失するため，定常偏差(定常状態での偏差)を完全になくすことはできない．&#xA;PI制御 PI制御の入力値$u(t)$は以下の式で与えられる．&#xA;$$ u(t)=K_Pe(t)+K_I\int_0^te(\tau)d\tau$$&#xA;I制御は，偏差の積分値をフィードバックするため，偏差が小さくなったとしても入力値が消失することはない．これにより，定常偏差を解消する．ただし，積分動作により位相が遅れてしまうため出力値が急激に変化した場合，オーバーシュートやハンチングが生じることがある．&#xA;PID制御 PID制御の入力値$u(t)$は以下の式で与えられる．&#xA;$$u(t)=K_Pe(t)+K_I\int_0^te(\tau)d\tau+K_D\frac{de(t)}{dt}$$&#xA;D制御は，偏差の微分値をフィードバックするため，出力値の急激な変化に対して早めに偏差の増減を抑制し，応答の遅れを改善することができる．&#xA;PID制御は，偏差のP「現在」，I「過去」，D「未来」に基づいて制御することにより，安定性，追従性，即応性を満足する制御系を構成することができる．PID制御では，$K_P$，$K_I$，$K_D$のパラメータを適切に決定することが求められる．</description>
    </item>
  </channel>
</rss>
