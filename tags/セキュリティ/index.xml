<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>セキュリティ on tomato blog</title><link>https://yuhi-sa.github.io/tags/%E3%82%BB%E3%82%AD%E3%83%A5%E3%83%AA%E3%83%86%E3%82%A3/</link><description>Recent content in セキュリティ on tomato blog</description><generator>Hugo</generator><language>ja</language><lastBuildDate>Sun, 16 Jun 2024 09:10:00 +0900</lastBuildDate><atom:link href="https://yuhi-sa.github.io/tags/%E3%82%BB%E3%82%AD%E3%83%A5%E3%83%AA%E3%83%86%E3%82%A3/index.xml" rel="self" type="application/rss+xml"/><item><title>主要セキュリティモデルの比較：Biba完全性モデル、Clark-Wilsonモデル、Brewer-Nashモデル、Bell-LaPadulaモデル</title><link>https://yuhi-sa.github.io/posts/20240608_cissp/2/</link><pubDate>Sun, 16 Jun 2024 09:10:00 +0900</pubDate><guid>https://yuhi-sa.github.io/posts/20240608_cissp/2/</guid><description>主要セキュリティモデルの比較 セキュリティガバナンスを効果的に管理するために、以下の主要なセキュリティモデルがあります。
Biba完全性モデル 策定者: ケネス・J・ビバ（Kenneth J. Biba） 策定年: 1977年 策定国: アメリカ合衆国 特徴: データの完全性を保護することを目的としたセキュリティモデル。 主なルールは「no write up, no read down」で、低い信頼レベルのデータを高い信頼レベルに書き込むことや、高い信頼レベルのデータを低い信頼レベルから読むことを防止。 主に商業環境でのデータの完全性維持に利用される。 違い: 完全性に特化しており、機密性や可用性は対象外。 軍事用途よりも商業用途に向いている。 Clark-Wilsonモデル 策定者: デイビッド・D・クラーク（David D. Clark）とデイビッド・R・ウィルソン（David R. Wilson） 策定年: 1987年 策定国: アメリカ合衆国 特徴: 商業的なトランザクションのセキュリティを確保するためのモデル。 3つの主要概念（CDI：Constrained Data Items、TP：Transformation Procedures、IVP：Integrity Verification Procedures）を使って完全性を維持。 分離の義務（セグリゲーション・オブ・デューティ）を強調し、不正行為を防止。 違い: トランザクションと完全性に特化しており、他のセキュリティ属性は二次的。 商業環境に特に適している。 Brewer-Nashモデル（中国のウォールモデル） 策定者: デビッド・F・C・ブリュワー（David F.C. Brewer）とマイケル・J・ナッシュ（Michael J. Nash） 策定年: 1989年 策定国: イギリス 特徴: 利益相反を防止することを目的としたモデル。 ユーザーは、一度アクセスした情報に基づいて、競合するデータへのアクセスが制限される。 主に金融や法律などの分野で利用される。 違い: 利益相反の管理に特化しており、他のセキュリティ属性は対象外。 ダイナミックなアクセス制御を提供。 Bell-LaPadulaモデル 策定者: デビッド・E・ベル（David E. Bell）とレナード・J・ラパドゥラ（Leonard J. LaPadula） 策定年: 1973年 策定国: アメリカ合衆国 特徴: 機密性を保護するためのセキュリティモデル。 主なルールは「no read up, no write down」で、低いクリアランスレベルのデータを高いクリアランスレベルから読むことや、高いクリアランスレベルのデータを低いクリアランスレベルに書き込むことを防止。 主に軍事や政府機関で利用される。 違い: 機密性に特化しており、完全性や可用性は対象外。 軍事用途や機密情報の管理に向いている。</description></item><item><title>CISSP：セキュリティガバナンスにおける主要フレームワークの比較</title><link>https://yuhi-sa.github.io/posts/20240608_cissp/1/</link><pubDate>Thu, 06 Jun 2024 09:10:00 +0900</pubDate><guid>https://yuhi-sa.github.io/posts/20240608_cissp/1/</guid><description>セキュリティガバナンスにおける主要フレームワークの比較 セキュリティガバナンスを効果的に管理するために、以下の主要なフレームワークと標準があります。
NIST (National Institute of Standards and Technology) 策定団体: アメリカ合衆国商務省の国家標準技術研究所（NIST） 特徴: 主にアメリカ国内の政府機関や企業向けに標準とガイドラインを提供。 特にサイバーセキュリティに関するフレームワーク（NIST Cybersecurity Framework）が有名。 NIST SP 800シリーズは、具体的なセキュリティ管理と技術に関する詳細なガイドラインを提供。 違い: 政府主導であり、特にアメリカ国内での適用が多い。 実践的で技術的なガイドラインが豊富。 ITIL (Information Technology Infrastructure Library) 策定団体: AXELOS（英国政府と民間企業の合弁企業） 特徴: ITサービスマネジメントのベストプラクティスを提供。 セキュリティ管理も含むが、主にITサービス全般の効率化と品質向上を目的とする。 サービスライフサイクル（サービスストラテジー、サービスデザイン、サービストランジション、サービスオペレーション、継続的サービス改善）に焦点を当てている。 違い: ITサービスマネジメント全般に焦点を当てており、セキュリティはその一部として扱われる。 プロセスと役割の明確な定義が特徴。 ISO/IEC 27000シリーズ 策定団体: 国際標準化機構（ISO）と国際電気標準会議（IEC） 特徴: 情報セキュリティ管理のための国際標準。 ISO/IEC 27001: 情報セキュリティマネジメントシステム（ISMS）の要件を定義。 ISO/IEC 27002: ISO/IEC 27001の実装ガイドラインを提供。 グローバルに認知され、広く適用される。 違い: 国際標準として広く受け入れられており、認証制度が存在する。 組織全体の情報セキュリティ管理に焦点を当てている。 COSO (Committee of Sponsoring Organizations of the Treadway Commission) 策定団体: COSO（トレッドウェイ委員会スポンサー団体委員会） 特徴: リスク管理と内部統制のフレームワークを提供。 COSO Internal Control - Integrated Framework: 組織の内部統制を強化し、リスクを管理するためのガイドライン。 会計と財務報告の視点からもリスク管理を強調。 違い: 主に内部統制とリスク管理に焦点を当てており、情報セキュリティはその一部。 財務報告の信頼性確保にも関連。 COBIT (Control Objectives for Information and Related Technologies) 策定団体: ISACA（Information Systems Audit and Control Association） 特徴: ITガバナンスと管理のためのフレームワーク。 COBIT 2019: ITガバナンスと管理のための包括的なフレームワークを提供し、リスク管理、コンプライアンス、セキュリティ管理を含む。 ビジネスとITの整合性を重視。 違い: ITガバナンスに特化しており、ビジネス目標とIT戦略の整合性を強調。 フレームワーク全体がIT管理とガバナンスに焦点を当てている。</description></item><item><title>【体験談アリ】情報処理安全確保支援士（登録セキスペ）の勉強方法は？教材から登録方法までの実録を紹介</title><link>https://yuhi-sa.github.io/posts/20240503_riss/1/</link><pubDate>Fri, 03 May 2024 10:10:00 +0900</pubDate><guid>https://yuhi-sa.github.io/posts/20240503_riss/1/</guid><description/></item><item><title>メールにおける認証技術</title><link>https://yuhi-sa.github.io/posts/20230328_mail_auth/1/</link><pubDate>Tue, 28 Mar 2023 09:00:23 +0900</pubDate><guid>https://yuhi-sa.github.io/posts/20230328_mail_auth/1/</guid><description/></item><item><title>シングルサインオン(SSO)</title><link>https://yuhi-sa.github.io/posts/20230105_sec/2/</link><pubDate>Tue, 03 Jan 2023 09:00:23 +0900</pubDate><guid>https://yuhi-sa.github.io/posts/20230105_sec/2/</guid><description/></item><item><title>チャレンジレスポンス方式</title><link>https://yuhi-sa.github.io/posts/20230105_sec/1/</link><pubDate>Tue, 03 Jan 2023 09:00:23 +0900</pubDate><guid>https://yuhi-sa.github.io/posts/20230105_sec/1/</guid><description/></item></channel></rss>